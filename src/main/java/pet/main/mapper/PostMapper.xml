<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pet.main.mapper.PostMapper">

	<!-- 게시글 갯수 출력 -->
	<select id="count" resultType="int">
		SELECT COUNT(*) FROM hospital
	</select>

	<!-- 페이징 처리 후 게시글 조회 -->
	<select id="select" resultType="pet.main.vo.PostVO">

		SELECT *
		FROM (
		SELECT
		@rownum:=@rownum+1 rn, A.*
		FROM (
		SELECT *
		FROM hospital,
		(SELECT
		@ROWNUM:=0)
		t
		ORDER BY num DESC
		) A
		) B

		LEFT OUTER JOIN ( SELECT hpnum,
		SUM(hos_likedislike.like) as sumlike , SUM(dislike) as sumdislike FROM
		final.hos_likedislike GROUP BY hpnum) l
		ON B.num = l.hpnum
		WHERE RN
		BETWEEN #{start} AND
		#{end}
		ORDER BY num DESC
	</select>

	<!--글작성 -->
	<insert id="board" parameterType="pet.main.vo.PostVO"
		useGeneratedKeys="true" keyProperty="num">
		INSERT INTO hospital VALUES(null,
		#{sido}, #{gugun}, #{author}, #{name}, #{title}, #{summernote}, NOW(),
		0)
	</insert>

	<!-- 파일업로드 -->
	<insert id="fileInfo" parameterType="pet.main.vo.AttachVO">
		INSERT INTO hos_attach
		VALUES(null, #{hos_num},
		#{filename}, #{filesize})
	</insert>

	<!-- 파일 불러오기 -->
	<select id="getFilename" parameterType="Integer"
		resultType="String">
		SELECT filename FROM hos_attach WHERE
		att_num=#{att_num}
	</select>

	<!-- 게시글 불러오기 -->
	<select id="detailNum" resultType="map" parameterType="Integer">
		SELECT *
		FROM hospital b
		LEFT OUTER JOIN hos_attach a
		ON b.num=a.hos_num
		LEFT
		OUTER JOIN ( SELECT hpnum, SUM(hos_likedislike.like) as sumlike ,
		SUM(dislike) as sumdislike FROM final.hos_likedislike GROUP BY hpnum)
		l
		ON b.num = l.hpnum
		WHERE b.num= #{num};
	</select>

	<!-- 수정하기 -->
	<update id="updated" parameterType="pet.main.vo.PostVO">
		UPDATE hospital SET
		title=#{title},
		summernote=#{summernote}
		WHERE num=#{num}
	</update>

	<!-- 파일삭제 -->
	<delete id="deleteFileInfo" parameterType="Integer">
		DELETE FROM
		hos_attach
		WHERE att_num=#{num}
	</delete>

	<!-- 글삭제 -->
	<delete id="deleted" parameterType="Integer">
		DELETE FROM hospital
		WHERE
		num=#{num}
	</delete>


	<!-- 리스트 가져오기 -->
	<select id="codeList" resultType="map" parameterType="String">
		SELECT *
		FROM hospital
	</select>

	<!-- 시도 불러오기 -->
	<select id="ShareFcList" resultType="pet.main.vo.PostVO"
		parameterType="String">
		SELECT * FROM
		(SELECT * FROM hospital WHERE sido LIKE
		CONCAT('%', #{sido}, '%')) f
		LEFT
		OUTER JOIN ( SELECT hpnum,
		SUM(hos_likedislike.like) as sumlike ,
		SUM(dislike) as sumdislike FROM
		final.hos_likedislike GROUP BY hpnum)
		l
		ON f.num = l.hpnum
		WHERE f.gugun
		LIKE CONCAT('%', #{gugun}, '%')
		ORDER BY f.num DESC
	</select>

	<!-- SELECT * FROM (SELECT * FROM hospital WHERE sido LIKE CONCAT('%', #{sido}, 
		'%')) f WHERE f.gugun LIKE CONCAT('%', #{gugun}, '%') h LEFT OUTER JOIN ( 
		SELECT hpnum, SUM(hos_likedislike.like) as sumlike , SUM(dislike) as sumdislike 
		FROM final.hos_likedislike GROUP BY hpnum) l ON h.num = l.hpnum ORDER BY 
		f.num DESC -->

	<!-- 조회수 증가 -->
	<update id="viewCnt" parameterType="Integer">
		UPDATE hospital
		SET viewCnt =
		viewCnt + 1
		WHERE num = #{num}
	</update>

	<!-- 게시글 추천하기. -->
	<insert id="like" parameterType="map" useGeneratedKeys="true"
		keyProperty="lnum">
		INSERT INTO hos_likedislike(lnum, uid, hpnum,
		hos_likedislike.like, sido)
		VALUES (null, #{uid} , #{hpnum}, 1,
		#{sido})
	</insert>

	<!-- 게시글 추천 최초 확인. -->
	<select id="likeCheck" parameterType="map" resultType="int">
		SELECT
		count(hos_likedislike.like)
		FROM hos_likedislike
		WHERE uid = #{uid} AND
		hpnum = #{hpnum} AND sido = #{sido}
	</select>

	<!-- 추천 수 확인 -->
	<select id="likeCntCheck" resultType="int" parameterType="map">
		SELECT
		hos_likedislike.like
		FROM hos_likedislike
		WHERE uid = #{uid} AND hpnum =
		#{hpnum} AND sido = #{sido}
	</select>

	<!-- 게시글 추천 취소하기. -->
	<update id="likeCancle" parameterType="map">
		UPDATE hos_likedislike
		SET
		hos_likedislike.like = hos_likedislike.like - 1
		WHERE uid = #{uid} AND
		hpnum = #{hpnum} AND sido = #{sido}
	</update>

	<!-- 추천 취소 후 다시 추천할 시 업데이트. -->
	<update id="relike" parameterType="map">
		UPDATE hos_likedislike
		SET
		hos_likedislike.like = hos_likedislike.like + 1
		WHERE uid = #{uid} AND
		hpnum = #{hpnum} AND sido = #{sido}
	</update>

	<!-- 게시글 비추천하기. -->
	<insert id="dislike" parameterType="map" useGeneratedKeys="true"
		keyProperty="lnum">
		INSERT INTO hos_likedislike(lnum, uid, hpnum,
		hos_likedislike.dislike, sido)
		VALUES (null, #{uid} , #{hpnum}, 1,
		#{sido})
	</insert>

	<!-- 게시글 비추천 최초 확인. -->
	<select id="dislikeCheck" parameterType="map" resultType="int">
		SELECT
		count(hos_likedislike.dislike)
		FROM hos_likedislike
		WHERE uid = #{uid}
		AND hpnum = #{hpnum} AND sido = #{sido}
	</select>

	<!-- 비추천 수 확인 -->
	<select id="dislikeCntCheck" resultType="int"
		parameterType="map">
		SELECT hos_likedislike.dislike
		FROM hos_likedislike
		WHERE
		uid = #{uid} AND hpnum = #{hpnum} AND sido = #{sido}
	</select>

	<!-- 게시글 비추천 취소하기. -->
	<update id="dislikeCancle" parameterType="map">
		UPDATE hos_likedislike
		SET hos_likedislike.dislike = hos_likedislike.dislike - 1
		WHERE uid =
		#{uid} AND hpnum = #{hpnum} AND sido = #{sido}
	</update>

	<!-- 비추천 취소 후 다시 비추천할 시 업데이트. -->
	<update id="redislike" parameterType="map">
		UPDATE hos_likedislike
		SET
		hos_likedislike.dislike = hos_likedislike.dislike + 1
		WHERE uid =
		#{uid} AND hpnum = #{hpnum} AND sido = #{sido}
	</update>

	<!-- 게시글 찜하기. -->
	<insert id="dibsOn" parameterType="map" useGeneratedKeys="true"
		keyProperty="dnum">
		INSERT INTO hos_dibson
		VALUES (null, #{uid} , #{hpnum},
		#{sido})
	</insert>

	<!-- 찜 한 게시글 확인. (중복저장 하지않기위해.) -->
	<delete id="dibsOnCancle" parameterType="map">
		DELETE
		FROM hos_dibson
		WHERE uid = #{uid} AND hpnum = #{hpnum} AND sido = #{sido}
	</delete>

	<!-- 찜 한 게시글 수 가져오기. -->
	<select id="dibsOnCnt" resultType="Integer"
		parameterType="String">
		SELECT SUM(total.CNT)
		FROM
		(SELECT COUNT(*) as CNT
		FROM
		hos_dibson
		WHERE uid = #{uid}
		UNION ALL
		SELECT COUNT(*) as CNT
		FROM shfc_dibson
		WHERE uid = #{uid}
		UNION ALL
		SELECT COUNT(*) as CNT
		FROM hp_dibson
		WHERE uid = #{uid}
		) total;
	</select>

	<!-- 찜 한 여부 색상 보기 위한 데이터 가져오기. -->
	<select id="dibsOnPnum" resultType="Integer" parameterType="map">
		SELECT hpnum
		FROM hos_dibson
		WHERE uid = #{uid} AND hpnum = #{hpnum}
	</select>

	<!-- 추천 비추천 여부 확인 위한 데이터 가져오기. -->

	<!-- 추천 비추천 카운트 가져오기. -->
	<select id="likeDislikeCnt"
		resultType="pet.main.vo.LikeDislikeVO">
		SELECT lnum, uid, hpnum, hos_likedislike.like, dislike,
		SUM(hos_likedislike.like) as sumlike, SUM(dislike) as sumdislike
		FROM
		hos_likedislike;
	</select>

	<!-- 메인 검색기능 -->
	<select id="boardlist" resultType="pet.main.vo.PostVO"
		parameterType="String">
		SELECT *
		FROM hospital h
		LEFT OUTER JOIN ( SELECT hpnum,
		SUM(hos_likedislike.like) as sumlike ,
		SUM(dislike) as sumdislike FROM
		final.hos_likedislike GROUP BY hpnum)
		l
		ON h.num = l.hpnum
		WHERE title
		LIKE CONCAT ('%', #{keyword}, '%') OR sido LIKE CONCAT ('%',
		#{keyword}, '%') OR gugun LIKE CONCAT ('%', #{keyword}, '%') OR
		summernote LIKE CONCAT ('%', #{keyword}, '%')
		ORDER BY
		num DESC
	</select>

	<!-- 메인 검색기능 카운트 -->
	<select id="countboardlist" resultType="int">
		SELECT COUNT(*) FROM
		hospital h
		LEFT OUTER JOIN ( SELECT hpnum, SUM(hos_likedislike.like) as
		sumlike ,
		SUM(dislike) as sumdislike FROM final.hos_likedislike GROUP
		BY hpnum)
		l
		ON h.num = l.hpnum
		WHERE title LIKE CONCAT ('%', #{keyword},
		'%')
		ORDER BY
		num DESC
	</select>



</mapper>